# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2


      - uses: actions/checkout@v2
        with:
          repository: yieldmo/dcs-common-python
          token: ${{ secrets.GIT_TOKEN }}

      # setup AWS CLI and boto3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      # sam build
      #- run: git clone https://${{ secrets.$GIT_USERNAME }}:${{ secrets.$GIT_PASSWORD }}@github.com/yieldmo/dcs-common-python.git
      - run: aws s3 ls s3://jfudawg
      - run: pip3 install -r $GITHUB_WORKSPACE/requirements.txt
      - run: python3 $GITHUB_WORKSPACE/deploy/upsert_lambda.py -f $GITHUB_WORKSPACE/lambdas/somewhere/get/lambda_function.py -e staging
